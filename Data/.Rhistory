getwd()
library(tidyverse)
trees
trees
trees %>%
c("Girth","Volume") %>%
summary()
iris
var1 <- iris$Species %>% c("setosa","virginica")
iris[var1,]
var1 <- iris$Species %in% c("setosa","virginica")
iris[var1,]
iris2 <- filter(iris,Species %in% c("setosa", "virginica"))
print(iris2)
help('filter
')
??filter
varf <- c(1,2,4,5,677)
for (i in varf) {print(i^2)}
for(i in c(1,2,4,5,677)) {print(i^2)}
help('aes')
??aes
iris
library(ggplot2)
library(tidyverse)
packages()
df <-  read.csv("../../Data/landdata-states.csv") # why did I change to read.csv ???
class(df) # what type of object is df?
getwd()
??cd
?read.table()
df <- read.csv("desktop/Data_Course_Nunez/data/landdata-states.csv")
getwd()
df <-  read.csv("../Data_Course_NUNEZ/Data/landdata-states.csv")
setwd("~Users/cesar_000/Desktop/Data_Course_NUNEZ/Data")
setwd("C:/Users/cesar_000/Desktop/Data_Course_NUNEZ/Data")
getwd()
df <-  read.csv("landdata-states.csv")
df <-  read.csv("landdata-states.csv")
class(df)
head(df)
class(df$State)
class(df$Date)
# 4. How could I change the parameters of read.csv() to make it so the class of the “State” column is “character” instead of “factor?”
df$State <- as.character(df$State)
print(df$State)
class(df$State)
dim(df)
str(df)
summary(df)
# 5. What command would give the summary stats for ONLY the Home.Value column?
summary(df$Home.Value)
# 6. What value is returned by the command: names(df)[4] ?
#The fourth row on df, which is Home.Value
names(df)[4]
hist(df$Land.Value)
# If you want to look at land value by region, you could do this:
plot(x=df$region,y=df$Land.Value)
df
# If you want to look at land value by region, you could do this:
plot(x=df$region,y=df$Land.Value)
# If you want to look at land value by region, you could do this:
plot(x=df$region, y=df$Land.Value)
# If you want to look at land value by region, you could do this:
plot(df$region, df$Land.Value)
# If you want to look at land value by region, you could do this:
plot(x=df$region, y=df$Land.Value)
getwd()
df
# If you want to look at land value by region, you could do this:
plot(x=df$region, y=df$Land.Value)
df$region
df$Land.Value
plot(df$region, df$Land.Value)
# If you want to look at land value by region, you could do this:
plot(x=df$Home.Value, y=df$Land.Value)
hist(df$Land.Value)  # histogram showing number of times each numeric value was seen in the vector "Land.Value"
# If you want to look at land value by region, you could do this:
plot(x=df$Home.Value, y=df$Land.Value)
??xlim
# Land value by year
plot(x=df$Year,y=df$Land.Value)
plot(x=df$Year,y=df$Land.Value,col=df$region)
plot(x=df$Year,y=df$Land.Value,col=blues9)
df
# If you want to look at land value by region, you could do this:
plot(x=df$State, y=df$Land.Value)
install.packages()
installed.packages()
library(ggplot2)
ggplot(data = iris)
df <-  read.csv("landdata-states.csv")
ggplot(data = iris, aes(y=Sepal.Length, x=Petal.Length))
ggplot(data = iris)
ggplot(data = iris, aes(y=Sepal.Length, x=Petal.Length))
ggplot(data = iris, aes(y=Sepal.Length, x=Petal.Length))+geom_point()
ggplot(data = iris, aes(y=Sepal.Length, x=Petal.Length,col=Species))+geom_point()
ggplot(df, aes(y=Land.Value, x=region))+geom_point()
ggplot(df, aes(y=Land.Value, x=Year))+geom_point()
ggplot(df, aes(y=Land.Value, x=Year,col(region)))+geom_point()
ggplot(df, aes(y=Land.Value, x=Year,col=region))+geom_point()
#Could also change the shape
ggplot(df, aes(y=Land.Value, x=Year,col=region, shape=region))+geom_point()
ggplot(df, aes(y=Land.Value, x=Year,col=region))+geom_point()
ggplot(df, aes(y=Land.Value, x=region))+geom_point()
ggplot(df, aes(y=Land.Value, x=region))+geom_boxplot()
#Find missing values
is.na(df)
sum(is.na(df))
#omit missing values
na.omit(df)
#count missing data
sum(is.na(df))
#omit missing values
na.omit(df)
ggplot(df, aes(y=Land.Value, x=region,na.rm = TRUE ))+geom_boxplot()
